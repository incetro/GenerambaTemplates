{% include 'header' %}

{% replacement = custom_parameters.service }
{% assign service_tail_count = replacement | size | minus: 1 %}
{% assign service_first_letter = replacement | slice: 0 | downcase %}
{% assign service_without_first_letter = replacement | slice: 1, service_tail_count %}
{% assign service_uncap = service_first_letter | append: service_without_first_letter %}
{% comment %}
{% It's necessary to use `swiftlint autocorrect` after generating this module because there will be empty lines %}
{% endcomment %}

import Foundation

// MARK: - {{ prefix }}{{ module_info.name }}Interactor

final class {{ prefix }}{{ module_info.name }}Interactor {
    
    // MARK: - Properties
    
    /// Presenter instance
    weak var output: {{ prefix }}{{ module_info.name }}InteractorOutput?

    /// {{ custom_parameters.service }}Service instance
    private let {{ service_uncap }}Service: {{ custom_parameters.service }}Service

    // MARK: - Initializers

    /// Default initializer
    /// - Parameters:
    ///   - {{ service_uncap }}Service: {{ custom_parameters.service }}Service instance
    init({{ service_uncap }}Service: {{ custom_parameters.service }}Service) {
        self.{{ service_uncap }}Service = {{ service_uncap }}Service
    }
}

// MARK: - {{ prefix }}{{ module_info.name }}InteractorInput

extension {{ prefix }}{{ module_info.name }}Interactor: {{ prefix }}{{ module_info.name }}InteractorInput {
}