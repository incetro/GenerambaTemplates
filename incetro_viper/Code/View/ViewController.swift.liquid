{% include 'header' %}

import UIKit
import TransitionHandler

// MARK: - {{ prefix }}{{ module_info.name }}ViewController

final class {{ prefix }}{{ module_info.name }}ViewController: UIViewController {
    
    // MARK: - Properties

    /// Presenter instance
    var output: {{ prefix }}{{ module_info.name }}ViewOutput?
    
    // MARK: - ViewController

    override func viewDidLoad() {
        super.viewDidLoad()
        designer.add(designable: self)
        localizer.add(localizable: self)
        output?.didTriggerViewReadyEvent()
    }

    // MARK: - Private
}

// MARK: - Layout

extension {{ prefix }}{{ module_info.name }}ViewController {

    private func setup() {

    }
}

// MARK: - Actions

extension {{ prefix }}{{ module_info.name }}ViewController {

}

// MARK: - {{ prefix }}{{ module_info.name }}ViewInput

extension {{ prefix }}{{ module_info.name }}ViewController: {{ prefix }}{{ module_info.name }}ViewInput {
    
    func setupInitialState() {   

    }
}

// MARK: - ViperViewOutputProvider

extension {{ prefix }}{{ module_info.name }}ViewController: ViewOutputProvider {
    var viewOutput: ModuleInput? {
        output as? ModuleInput
    }
}

// MARK: - Localizable

extension {{ prefix }}{{ module_info.name }}ViewController: Localizable {

    func localize(language: Language) {
    }
}

// MARK: - Designable

extension {{ prefix }}{{ module_info.name }}ViewController: Designable {

    func design(appearance: Appearance) {
        let design = appearance.{{ prefix }}{{ module_name_uncap }}ViewControllerAppearance
        view.backgroundColor = design.backgroundColor
    }
}

// MARK: - Constants

extension {{ prefix }}{{ module_info.name }}ViewController {

    enum Constants {
    }
}