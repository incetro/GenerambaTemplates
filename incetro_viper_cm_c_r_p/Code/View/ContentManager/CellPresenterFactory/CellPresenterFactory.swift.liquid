{% include 'header' %}

import UIKit

// MARK: - {{ custom_parameters.cell }}CellPresenterFactory

protocol {{ custom_parameters.cell }}CellPresenterFactory {
    
    /// Create {{ custom_parameters.cell }}CellPresenter instance using some
    /// viewModel and register it to the given tableView
    ///
    /// - Parameters:
    ///   - viewModel: viewModel instance for cell's configuration
    ///   - tableView: tableView for registering cell
    /// - Returns: {{ custom_parameters.cell }}CellPresenter instance
    func controller(with viewModel: {{ custom_parameters.cell }}CellViewModelProtocol, tableView: UITableView) -> {{ custom_parameters.cell }}CellPresenter
}

extension {{ custom_parameters.cell }}CellPresenterFactory {

    /// Create {{ custom_parameters.cell }}CellPresenter array using some
    /// viewModels and register it to the given tableView
    ///
    /// - Parameters:
    ///   - viewModels: viewModels instances for cells configuration
    ///   - tableView: tableView for registering cells
    /// - Returns: {{ custom_parameters.cell }}CellPresenter array
    func controllers(with viewModels: [{{ custom_parameters.cell }}CellViewModelProtocol], tableView: UITableView) -> [{{ custom_parameters.cell }}CellPresenter] {
        return viewModels.map {
            controller(with: $0, tableView: tableView)
        }
    }
}
