{% include 'header' %}

import Foundation

// MARK: - {{ prefix }}{{ module_info.name }}Interactor

final class {{ prefix }}{{ module_info.name }}Interactor {
    
    // MARK: - Properties
    
    /// Presenter instance
    weak var output: {{ prefix }}{{ module_info.name }}InteractorOutput?

    /// {{ custom_parameters.entities }}Service instance
    private let {{ service_uncap }}Service: {{ custom_parameters.service }}Service

    /// Paginator instance
    private var paginator = Paginator<{{ custom_parameters.plain }}PlainObject>(pageSize: 10)

    /// Default initializer
    /// - Parameters:
    ///   - {{ service_uncap }}Service: {{ custom_parameters.service }}Service instance
    init(
        {{ service_uncap }}Service: {{ custom_parameters.service }}Service
    ) {
        self.{{ service_uncap }}Service = {{ service_uncap }}Service
        setupPaginator()
    }

    // MARK: - Private

    private func setupPaginator() {
        paginator.fetchHandler = { [weak self] (paginator, page, pageSize) in
            self?.{{ service_uncap }}Service
                .obtain(page: page, pageSize: pageSize)
                .async()
                .success { ({{ service_uncap }}, pagination) in
                    paginator.received(results: {{ service_uncap }}, total: pagination.totalCount)
                }
                .failure(paginator.failed)
        }
        paginator.resultsHandler = { [weak self] (paginator, {{ service_uncap }}) in
            self?.output?.obtain{{ custom_parameters.entities }}Success({{ service_uncap }}: {{ service_uncap }})
        }
        paginator.completionHandler = { [weak self] _ in
            self?.output?.pagintaionHasBeenCompleted()
        }
    }
}

// MARK: - {{ prefix }}{{ module_info.name }}InteractorInput

extension {{ prefix }}{{ module_info.name }}Interactor: {{ prefix }}{{ module_info.name }}InteractorInput {
    
    func obtain{{ custom_parameters.entities }}() {
        paginator.fetchFirstPage()
    }

    func obtainNextPage() {
        paginator.fetchNextPage()
    }
}